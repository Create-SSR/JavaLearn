/**
 * @author create
 * USER 表示主机名
 * {@code @date} $2023.02.17
 * DATA 为文档创建日期，TIME 为详细创建时间
 */
public class Day002 {
    public static void main(String[] args) {
        //标识符（标志符）Identifier 凡事程序员有权命名的单词
        //标识符：类名、方法名、变量名、接口名、常量名.....
        /*标识符命名规则：
            规则1：标识符只能由数字、字母、下划线、美元符号$组成，不能有其他符号
            规则2：标识符不能由数字开头，中间不能有空格
            规则3：关键字不能做标识符
            规则4：标识符严格区分大小写  对于类名而言。当一个java源文件中出现 A类和a类，那么谁在前谁可以编译出来，且不会报错
            规则5：标识符理论上没有长度限制

        命名规范：
            规范1：见名知意
            规范2：遵循驼峰方式
            规范3：类名和接口名首字母大写，后面每个单词首字母大写
                  方法名和变量名首字母小写，后面每个单词首字母大写
            规范4：所有常量名字母全部大写，并且单词和单词之间采用下划线连接

         */

        //关键字：提前定义好的具有特殊含义的单词，这些关键字全部小写
        /*字面量：
                整数型字面量
                浮点型字面量
                布尔型字面量

                字符型字面量：单个字符  只能由单引号括起来
                字符串型字面量：   由双引号括起来
         */
        /*
            变量三要素：数据类型、变量名、变量值
            变量名首字母小写，后面每隔单词首字母大写
            变量的声明：  数据类型 变量名；

            数据类型：根据不同数据类型，内存分配不同大小的空间
            1字节 = 8 个比特位（bit）
            1个比特位就是一个1或0，注意：比特位是二进制位

         */
        //定义一个变量
        // 变量必须啊先声明，再赋值之后才能访问；
        //同一个变量名只能声明一次，但可以多次赋值；
        //同时声明了a,b,c，但只给c赋了值
        int a, b, c = 100;

        int ageLi =35;
        System.out.println(ageLi);
        ageLi = 40;
        System.out.println(ageLi);

        /*
             变量的分类
                变量根据出现的位置进行划分； 依据：声明位置
                   在方法体中声明的变量：局部变量
                   在类体内，方法体外声明的变量：成员变量
                   注意：局部变量只有在方法体内生效，方法体执行结束后就会被内存释放
             变量的作用域：
                1，作用域就是变量的有效范围；理解：（作用域就是大括号内）出了大括号就不生效了
         */
        //for循环中定义的变量，出了循环体就会被释放
        for(int i = 0; i < 10;i++){
            System.out.println(i);
        }
        //System.out.println(i);


    }

}

